// Code generated by goctl. DO NOT EDIT.
// Source: collection.proto

package server

import (
	"context"

	"github.com/xh-polaris/meowchat-collection-rpc/internal/logic"
	"github.com/xh-polaris/meowchat-collection-rpc/internal/svc"
	"github.com/xh-polaris/meowchat-collection-rpc/pb"
)

type CatServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedCatServer
}

func NewCatServer(svcCtx *svc.ServiceContext) *CatServer {
	return &CatServer{
		svcCtx: svcCtx,
	}
}

func (s *CatServer) GetManyCat(ctx context.Context, in *pb.GetManyCatReq) (*pb.GetManyCatResp, error) {
	l := logic.NewGetManyCatLogic(ctx, s.svcCtx)
	return l.GetManyCat(in)
}

func (s *CatServer) GetCat(ctx context.Context, in *pb.GetCatReq) (*pb.GetCatResp, error) {
	l := logic.NewGetCatLogic(ctx, s.svcCtx)
	return l.GetCat(in)
}

func (s *CatServer) AddCat(ctx context.Context, in *pb.AddCatReq) (*pb.AddCatResp, error) {
	l := logic.NewAddCatLogic(ctx, s.svcCtx)
	return l.AddCat(in)
}

func (s *CatServer) UpdateCat(ctx context.Context, in *pb.UpdateCatReq) (*pb.UpdateCatResp, error) {
	l := logic.NewUpdateCatLogic(ctx, s.svcCtx)
	return l.UpdateCat(in)
}

func (s *CatServer) DeleteCat(ctx context.Context, in *pb.DeleteCatReq) (*pb.DeleteCatResp, error) {
	l := logic.NewDeleteCatLogic(ctx, s.svcCtx)
	return l.DeleteCat(in)
}
